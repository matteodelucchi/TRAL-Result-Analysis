url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(dest_file)){
download.file(url_kin, destfile = dest_file_kin)
}
load_kinome <- function(path){
sp_kinome <- read.csv(path, sep="\t", header=TRUE, quote="", stringsAsFactors = FALSE)
return(sp_kinome)
}
load_kinome(dest_file_kin)
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(dest_file_kin)){
download.file(url_kin, destfile = dest_file_kin)
}
load_kinome <- function(path){
sp_kinome <- read.csv(path, sep="\t", header=TRUE, quote="", stringsAsFactors = FALSE)
return(sp_kinome)
}
load_kinome(dest_file_kin)
sp_kinome <- load_kinome(dest_file_kin)
sp_kinome
# sp_kinome <- read.csv(path, sep="\t", header=TRUE, quote="", stringsAsFactors = FALSE)
sp_kinome <- readAAStringSet(path)
load_kinome <- function(path){
# sp_kinome <- read.csv(path, sep="\t", header=TRUE, quote="", stringsAsFactors = FALSE)
sp_kinome <- readAAStringSet(path)
return(sp_kinome)
}
sp_kinome <- load_kinome(dest_file_kin)
sp_kinome
Biostrings::names(sp_kinome)
names(sp_kinome)
kinIDs <- names(sp_kinome)
kinIDs <- base::strsplit(names(sp_kinome), split = "|")
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")[2]
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")[[2]]
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
typeof(kinIDs)
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- as.data.frame(kinIDs)
kinIDs
kinIDs <- as.data.frame(unlist(kinIDs))
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- as.data.frame(unlist(kinIDs))
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- as.data.frame(unlist(kinIDs), nrow=length(kinIDs), by.row = TRUE)
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- as.data.frame(unlist(kinIDs), nrow=length(kinIDs), byrow = TRUE)
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- as.data.frame(matrix(unlist(kinIDs)), nrow=length(kinIDs), byrow = TRUE)
kinIDs
kinIDs <- data.frame(matrix(unlist(kinIDs)), nrow=length(kinIDs), byrow = TRUE)
if(OnlyIDs){
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- data.frame(matrix(unlist(kinIDs)), nrow=length(kinIDs), byrow = TRUE)
}
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- data.frame(matrix(unlist(kinIDs)), nrow=length(kinIDs), byrow = TRUE)
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
length(kinIDs)
kinIDs <- data.frame(unlist(kinIDs), nrow=length(kinIDs), byrow = TRUE)
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- data.frame(unlist(kinIDs), nrow=length(kinIDs), byrow = TRUE, stringsAsFactors = FALSE)
kinIDs
kinIDs <- data.frame(unlist(kinIDs), ncol=3, stringsAsFactors = FALSE)
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- data.frame(unlist(kinIDs), ncol=3, stringsAsFactors = FALSE)
kinIDs
kinIDs <- base::strsplit(names(sp_kinome), split = "[|]")
kinIDs <- data.frame(matrix(unlist(kinIDs), nrow=length(kinIDs), byrow = TRUE), stringsAsFactors = FALSE)
kinIDs
fastaheader <- base::strsplit(names(sp_kinome), split = "[|]")
fastaheader <- data.frame(matrix(unlist(fastaheader), nrow=length(fastaheader), byrow = TRUE), stringsAsFactors = FALSE)
kinIDs <- fastaheader[,2]
kinIDs
load_kinome <- function(url, path, OnlyIDs = TRUE){
# url to UniProt/Swiss-Prot querying enzyme commissions for protein kinases
url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(dest_file_kin)){
download.file(url_kin, destfile = dest_file_kin)
}
# read the .fasta file
sp_kinome <- Biostrings::readAAStringSet(path)
if(!OnlyIDs){
return(sp_kinome)
} else if(OnlyIDs){
# split fasta header to separate the prot IDs from the rest and convert it to a dataframe
fastaheader <- base::strsplit(names(sp_kinome), split = "[|]")
fastaheader <- data.frame(matrix(unlist(fastaheader), nrow=length(fastaheader), byrow = TRUE), stringsAsFactors = FALSE)
# keep only the protIDs
kinIDs <- fastaheader[,2]
return(kinIDs)
}
}
sp_kinome <- load_kinome(dest_file_kin)
# url to UniProt/Swiss-Prot querying enzyme commissions for protein kinases
url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
load_kinome <- function(url, path, OnlyIDs = TRUE){
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(path)){
download.file(url, destfile = path)
}
# read the .fasta file
sp_kinome <- Biostrings::readAAStringSet(path)
if(!OnlyIDs){
return(sp_kinome)
} else if(OnlyIDs){
# split fasta header to separate the prot IDs from the rest and convert it to a dataframe
fastaheader <- base::strsplit(names(sp_kinome), split = "[|]")
fastaheader <- data.frame(matrix(unlist(fastaheader), nrow=length(fastaheader), byrow = TRUE), stringsAsFactors = FALSE)
# keep only the protIDs
kinIDs <- fastaheader[,2]
return(kinIDs)
}
}
sp_kinome <- load_kinome(url = url_kin, path = dest_file_kin)
sp_kinome
library(TRALResultAnalysis)
knitr::opts_chunk$set(collapse = T, comment = "#>")
options(tibble.print_min = 4L, tibble.print_max = 4L)
set.seed(123)
sessionInfo()
base_path <- "/home/matteo/polybox/MSc_ACLS/master_thesis/TRALResultAnalysis/"
library(TRALResultAnalysis)
tr_crcfavorable_path <- paste0(base_path, "inst/extdata/TRs_favorable_proteins_CRC_sp.tsv")
tr_crcunfavorable_path <- paste0(base_path, "inst/extdata/TRs_unfavorable_proteins_CRC_sp.tsv")
tr_wnt_path <- paste0(base_path, "inst/extdata/TRs_Wnt_proteins_CRC_sp.tsv")
dest_file_sp <- paste0(base_path, "data/swissprot_human.tsv")
dest_file_kin <- paste0(base_path, "data/swissprot_human_kinome.tsv")
tr_fav <- load_tr_annotations(tr_crcfavorable_path)
tr_unfav <- load_tr_annotations(tr_crcunfavorable_path)
tr_wnt <- load_tr_annotations(tr_wnt_path)
sp_url <- "https://www.uniprot.org/uniprot/?query=organism:%22Homo%20sapiens%20(Human)%20[9606]%22%20reviewed:yes&format=tab&columns=id,entry%20name,reviewed,protein%20names,genes,organism,length,virus%20hosts,encodedon,database(Pfam),interactor,comment(ABSORPTION),feature(ACTIVE%20SITE),comment(ACTIVITY%20REGULATION),feature(BINDING%20SITE),feature(CALCIUM%20BIND),comment(CATALYTIC%20ACTIVITY),comment(COFACTOR),feature(DNA%20BINDING),ec,comment(FUNCTION),comment(KINETICS),feature(METAL%20BINDING),feature(NP%20BIND),comment(PATHWAY),comment(PH%20DEPENDENCE),comment(REDOX%20POTENTIAL),rhea-id,feature(SITE),comment(TEMPERATURE%20DEPENDENCE)&sort=organism"
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(dest_file_sp)){
download.file(sp_url, destfile = dest_file_sp)
}
sp_all_fav <- load_swissprot(dest_file_sp, tr_fav)
sp_all_unfav <- load_swissprot(dest_file_sp, tr_unfav)
sp_all_wnt <- load_swissprot(dest_file_sp, tr_wnt)
tr_unfav_sp <- merge(x = tr_unfav, y = sp_all_unfav, by = "ID", all.x = TRUE)
tr_fav_sp <- merge(x = tr_fav, y = sp_all_fav, by = "ID", all.x = TRUE)
tr_wnt_sp <- merge(x = tr_wnt, y = sp_all_wnt, by = "ID", all.x = TRUE)
# CRC favorable
length(unique(tr_fav_sp$ID))/403 # through unique() we ensure to count those proteins with >1 TR only once.
# CRC unfavorable
length(unique(tr_unfav_sp$ID))/286
# Wnt pathway
length(unique(tr_wnt_sp$ID))
length(unique(tr_wnt_sp$ID))/644
TR_location(
rbind(tr_fav_sp, tr_unfav_sp),
byTRtype = TRUE)
TR_location(tr_fav_sp, byTRtype = TRUE)
TR_location(tr_unfav_sp, byTRtype = TRUE)
TR_location(
rbind(tr_fav_sp, tr_unfav_sp, tr_wnt_sp),
byTRtype = TRUE)
# combine all TR from the three groups
tr_all <- rbind(tr_fav, tr_unfav, tr_wnt)
AAfreq_all <- AAfreq_in_TR(tr_all)
AAfreq_all[base::order(AAfreq_all$aa_ratio, decreasing = TRUE),]
AAfreq_all_homo <- AAfreq_in_TR(tr_all[which(tr_all$l_type == "homo"),])
AAfreq_all_homo[base::order(AAfreq_all_homo$aa_ratio, decreasing = TRUE),]
AAfreq_all[which(AAfreq_all$aa == "L"),]
AAfreq_all_homo[which(AAfreq_all_homo$aa == "L"),]
# (AAfreq_fav <- AAfreq_in_TR(tr_fav))
# (AAfreq_unfav <- AAfreq_in_TR(tr_unfav))
# cor.test(AAfreq_fav$aa_ratio, AAfreq_unfav$aa_ratio, method = "spearman")
AAratio_vs_Disorderpropensity(tr_all, plot_title = "CRC & Wnt-Pathway Associated Proteins")
AAratio_vs_Disorderpropensity(sp_overall = TRUE)
# url to UniProt/Swiss-Prot querying enzyme commissions for protein kinases
url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
sp_kinIDs <- load_kinome(url = url_kin, path = dest_file_kin, OnlyIDs = TRUE)
length(sp_kinIDs)
sp_kinIDs %in% tr_all_sp$ID
sum(sp_kinIDs %in% tr_all_sp$ID)
# No. protein kinases in Wnt-Pathway
sum(sp_kinIDs %in% tr_wnt$ID)
# url to UniProt/Swiss-Prot querying enzyme commissions for protein kinases
url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
sp_kinIDs <- load_kinome(url = url_kin, path = dest_file_kin, OnlyIDs = TRUE)
# No. of protein kinases in Human Proteome
length(sp_kinIDs)
# No. protein kinases in Wnt-Pathway
sum(sp_kinIDs %in% tr_wnt$ID)
# No. protein kinases in CRC favorable proteins
sum(sp_kinIDs %in% tr_fav$ID)
# No. protein kinases in CRC unfavorable proteins
sum(sp_kinIDs %in% tr_unfavt$ID)
# No. protein kinases in CRC unfavorable proteins
sum(sp_kinIDs %in% tr_unfav$ID)
# url to UniProt/Swiss-Prot querying enzyme commissions for protein kinases
url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
sp_kinIDs <- load_kinome(url = url_kin, path = dest_file_kin, OnlyIDs = TRUE)
# No. of protein kinases in Human Proteome
length(sp_kinIDs)
# No. protein kinases in Wnt-Pathway
sum(sp_kinIDs %in% tr_wnt$ID)
# No. protein kinases in CRC favorable proteins
sum(sp_kinIDs %in% tr_fav$ID)
# No. protein kinases in CRC unfavorable proteins
sum(sp_kinIDs %in% tr_unfav$ID)
# No. of protein kinases in Human Proteome
length(sp_kinIDs) / nrow(sp_all_fav)
nrow(sp_all_fav)
# No. of protein kinases in Human Proteome
length(sp_kinIDs) / nrow(sp_all_fav)
# No. protein kinases in Wnt-Pathway
sum(sp_kinIDs %in% tr_wnt$ID)
sum(sp_kinIDs %in% tr_wnt$ID) / nrow(tr_wnt$ID)
nrow(tr_wnt$ID)
sum(sp_kinIDs %in% tr_wnt$ID) / nrow(tr_wnt)
(sum(sp_kinIDs %in% tr_fav$ID) + sum(sp_kinIDs %in% tr_unfav$ID))/(nrow(tr_fav)+nrow(tr_unfav))
dest_file_kin
dest_file_kinext <- "/home/matteo/polybox/MSc_ACLS/master_thesis/TRALResultAnalysis/data/swissprot_human_extkinome.tsv"
url_extkin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.-.-%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22%20AND%20proteome:up000005640&format=fasta&sort=score"
sp_extkinIDS <- load_kinome(url = url_extkin, path = dest_file_kinext, OnlyIDs = TRUE)
# No. of protein kinases in Human Proteome
length(sp_extkinIDS)
length(sp_extkinIDS) / nrow(sp_all_fav)
# No. protein kinases in Wnt-Pathway
sum(sp_extkinIDS %in% tr_wnt$ID)
sum(sp_extkinIDS %in% tr_wnt$ID) / nrow(tr_wnt)
# No. protein kinases in CRC favorable proteins
sum(sp_extkinIDS %in% tr_fav$ID)
# No. protein kinases in CRC unfavorable proteins
sum(sp_extkinIDS %in% tr_unfav$ID)
(sum(sp_extkinIDS %in% tr_fav$ID) + sum(sp_extkinIDS %in% tr_unfav$ID))/(nrow(tr_fav)+nrow(tr_unfav))
length(sp_extkinIDS) / nrow(sp_all_fav)
(sum(sp_kinIDs %in% tr_fav$ID) + sum(sp_kinIDs %in% tr_unfav$ID))/(nrow(tr_fav)+nrow(tr_unfav))
(sum(sp_kinIDs %in% tr_fav$ID) + sum(sp_kinIDs %in% tr_unfav$ID))/(nrow(tr_fav)+nrow(tr_unfav))
length(sp_kinIDs) / nrow(sp_all_fav)
library(TRALResultAnalysis)
tr_unfav_sp[grepl("FOX", tr_unfav_sp$prot_name),sel_var]
knitr::opts_chunk$set(collapse = T, comment = "#>")
options(tibble.print_min = 4L, tibble.print_max = 4L)
set.seed(123)
sessionInfo()
base_path <- "/home/matteo/polybox/MSc_ACLS/master_thesis/TRALResultAnalysis/"
library(TRALResultAnalysis)
tr_crcfavorable_path <- paste0(base_path, "inst/extdata/TRs_favorable_proteins_CRC_sp.tsv")
tr_crcunfavorable_path <- paste0(base_path, "inst/extdata/TRs_unfavorable_proteins_CRC_sp.tsv")
tr_wnt_path <- paste0(base_path, "inst/extdata/TRs_Wnt_proteins_CRC_sp.tsv")
dest_file_sp <- paste0(base_path, "data/swissprot_human.tsv")
dest_file_kin <- paste0(base_path, "data/swissprot_human_kinome.tsv")
tr_fav <- load_tr_annotations(tr_crcfavorable_path)
tr_unfav <- load_tr_annotations(tr_crcunfavorable_path)
tr_wnt <- load_tr_annotations(tr_wnt_path)
sp_url <- "https://www.uniprot.org/uniprot/?query=organism:%22Homo%20sapiens%20(Human)%20[9606]%22%20reviewed:yes&format=tab&columns=id,entry%20name,reviewed,protein%20names,genes,organism,length,virus%20hosts,encodedon,database(Pfam),interactor,comment(ABSORPTION),feature(ACTIVE%20SITE),comment(ACTIVITY%20REGULATION),feature(BINDING%20SITE),feature(CALCIUM%20BIND),comment(CATALYTIC%20ACTIVITY),comment(COFACTOR),feature(DNA%20BINDING),ec,comment(FUNCTION),comment(KINETICS),feature(METAL%20BINDING),feature(NP%20BIND),comment(PATHWAY),comment(PH%20DEPENDENCE),comment(REDOX%20POTENTIAL),rhea-id,feature(SITE),comment(TEMPERATURE%20DEPENDENCE)&sort=organism"
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(dest_file_sp)){
download.file(sp_url, destfile = dest_file_sp)
}
sp_all_fav <- load_swissprot(dest_file_sp, tr_fav)
sp_all_unfav <- load_swissprot(dest_file_sp, tr_unfav)
sp_all_wnt <- load_swissprot(dest_file_sp, tr_wnt)
tr_unfav_sp <- merge(x = tr_unfav, y = sp_all_unfav, by = "ID", all.x = TRUE)
tr_fav_sp <- merge(x = tr_fav, y = sp_all_fav, by = "ID", all.x = TRUE)
tr_wnt_sp <- merge(x = tr_wnt, y = sp_all_wnt, by = "ID", all.x = TRUE)
# CRC favorable
length(unique(tr_fav_sp$ID))/403 # through unique() we ensure to count those proteins with >1 TR only once.
# CRC unfavorable
length(unique(tr_unfav_sp$ID))/286
# Wnt pathway
length(unique(tr_wnt_sp$ID))
length(unique(tr_wnt_sp$ID))/644
TR_location(
rbind(tr_fav_sp, tr_unfav_sp),
byTRtype = TRUE)
TR_location(tr_fav_sp, byTRtype = TRUE)
TR_location(tr_unfav_sp, byTRtype = TRUE)
TR_location(
rbind(tr_fav_sp, tr_unfav_sp, tr_wnt_sp),
byTRtype = TRUE)
# combine all TR from the three groups
tr_all <- rbind(tr_fav, tr_unfav, tr_wnt)
AAfreq_all <- AAfreq_in_TR(tr_all)
AAfreq_all[base::order(AAfreq_all$aa_ratio, decreasing = TRUE),]
AAfreq_all_homo <- AAfreq_in_TR(tr_all[which(tr_all$l_type == "homo"),])
AAfreq_all_homo[base::order(AAfreq_all_homo$aa_ratio, decreasing = TRUE),]
AAfreq_all[which(AAfreq_all$aa == "L"),]
AAfreq_all_homo[which(AAfreq_all_homo$aa == "L"),]
# (AAfreq_fav <- AAfreq_in_TR(tr_fav))
# (AAfreq_unfav <- AAfreq_in_TR(tr_unfav))
# cor.test(AAfreq_fav$aa_ratio, AAfreq_unfav$aa_ratio, method = "spearman")
AAratio_vs_Disorderpropensity(tr_all, plot_title = "CRC & Wnt-Pathway Associated Proteins")
AAratio_vs_Disorderpropensity(sp_overall = TRUE)
# CRC favorable proteins in Wnt pathway
tr_fav_sp$protein_name[which(tr_fav_sp$ID %in% tr_wnt_sp$ID)]
# CRC unfavorable proteins in Wnt pathway
tr_unfav_sp$protein_name[which(tr_unfav_sp$ID %in% tr_wnt_sp$ID)]
# CRC favorable proteins
table(table(tr_fav$ID))
# CRC unfavorable proteins
table(table(tr_unfav_sp$ID))
# Wnt-pathway proteins
table(table(tr_wnt_sp$ID))
protein_id_by_number_of_TR(tr_unfav_sp, 11)
eleven_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 11)[[1]]),]
unique(eleven_TRs$protein_name)
unique(eleven_TRs$prot_function)
protein_id_by_number_of_TR(tr_unfav_sp, 5)
five_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 5)[[1]]),]
unique(five_TRs$protein_name)
unique(five_TRs$prot_function)
summary(tr_fav_sp$l_effective)
unique(tr_fav_sp$l_type)
summary(tr_unfav_sp$l_effective)
unique(tr_unfav_sp$l_type)
summary(tr_wnt_sp$l_effective)
unique(tr_wnt_sp$l_type)
summary(tr_fav_sp$n_effective)
summary(tr_unfav_sp$n_effective)
summary(tr_wnt_sp$n_effective)
summary(tr_fav_sp$total_repeat_length)
summary(tr_unfav_sp$total_repeat_length)
summary(tr_wnt_sp$total_repeat_length)
tr_wnt_sp$protein_name[which(tr_wnt_sp$total_repeat_length > 15)]
unique(tr_wnt_sp$prot_function[which(tr_wnt_sp$total_repeat_length > 15)])
tr_fav_sp$protein_name[which(tr_fav_sp$total_repeat_length > 15)]
unique(tr_fav_sp$prot_function[which(tr_fav_sp$total_repeat_length > 15)])
tr_unfav_sp$protein_name[which(tr_unfav_sp$total_repeat_length > 15)]
unique(tr_unfav_sp$prot_function[which(tr_unfav_sp$total_repeat_length > 15)])
sel_var <- c("ID", "begin", "msa_original", "repeat_region_length", "l_type", "prot_name", "protein_name", "gene_names", "prot_function")
tr_wnt_sp[which(tr_wnt_sp$ID == "Q9UJU2"),sel_var]
tr_wnt_sp[which(tr_wnt_sp$ID == "Q9HCS4"),sel_var]
tr_wnt_sp[which(tr_wnt_sp$ID == "P36402"),sel_var]
tr_wnt_sp[grepl("APC", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("GSK", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("KC", tr_wnt_sp$prot_name),sel_var]
tr_fav_sp[grepl("KC", tr_fav_sp$prot_name),sel_var]
tr_unfav_sp[grepl("KC", tr_unfav_sp$prot_name),sel_var]
tr_wnt_sp[grepl("AXIN", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("DVL", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("FOX", tr_wnt_sp$prot_name),sel_var]
tr_fav_sp[grepl("FOX", tr_fav_sp$prot_name),sel_var]
tr_unfav_sp[grepl("FOX", tr_unfav_sp$prot_name),sel_var]
library(TRALResultAnalysis)
library(TRALResultAnalysis)
library(TRALResultAnalysis)
library(TRALResultAnalysis)
knitr::opts_chunk$set(collapse = T, comment = "#>", fig.width=6)
options(tibble.print_min = 4L, tibble.print_max = 4L)
set.seed(123)
sessionInfo()
base_path <- "/home/matteo/polybox/MSc_ACLS/master_thesis/TRALResultAnalysis/"
library(TRALResultAnalysis)
tr_crcfavorable_path <- paste0(base_path, "inst/extdata/TRs_favorable_proteins_CRC_sp_l100.tsv")
tr_crcunfavorable_path <- paste0(base_path, "inst/extdata/TRs_unfavorable_proteins_CRC_sp_l100.tsv")
tr_wnt_path <- paste0(base_path, "inst/extdata/TRs_Wnt_proteins_CRC_sp_l100.tsv")
dest_file_sp <- paste0(base_path, "data/swissprot_human.tsv")
dest_file_kin <- paste0(base_path, "data/swissprot_human_kinome.tsv")
tr_fav <- load_tr_annotations(tr_crcfavorable_path)
tr_unfav <- load_tr_annotations(tr_crcunfavorable_path)
tr_wnt <- load_tr_annotations(tr_wnt_path)
sp_url <- "https://www.uniprot.org/uniprot/?query=organism:%22Homo%20sapiens%20(Human)%20[9606]%22%20reviewed:yes&format=tab&columns=id,entry%20name,reviewed,protein%20names,genes,organism,length,virus%20hosts,encodedon,database(Pfam),interactor,comment(ABSORPTION),feature(ACTIVE%20SITE),comment(ACTIVITY%20REGULATION),feature(BINDING%20SITE),feature(CALCIUM%20BIND),comment(CATALYTIC%20ACTIVITY),comment(COFACTOR),feature(DNA%20BINDING),ec,comment(FUNCTION),comment(KINETICS),feature(METAL%20BINDING),feature(NP%20BIND),comment(PATHWAY),comment(PH%20DEPENDENCE),comment(REDOX%20POTENTIAL),rhea-id,feature(SITE),comment(TEMPERATURE%20DEPENDENCE)&sort=organism"
# Download the swissprot file only if it doesn't already exist.
# Uncomment this, if you want to use the most recent available data!
if(!file.exists(dest_file_sp)){
download.file(sp_url, destfile = dest_file_sp)
}
sp_all_fav <- load_swissprot(dest_file_sp, tr_fav)
sp_all_unfav <- load_swissprot(dest_file_sp, tr_unfav)
sp_all_wnt <- load_swissprot(dest_file_sp, tr_wnt)
tr_unfav_sp <- merge(x = tr_unfav, y = sp_all_unfav, by = "ID", all.x = TRUE)
tr_fav_sp <- merge(x = tr_fav, y = sp_all_fav, by = "ID", all.x = TRUE)
tr_wnt_sp <- merge(x = tr_wnt, y = sp_all_wnt, by = "ID", all.x = TRUE)
# CRC favorable
length(unique(tr_fav_sp$ID))/403 # through unique() we ensure to count those proteins with >1 TR only once.
# CRC unfavorable
length(unique(tr_unfav_sp$ID))/286
# Wnt pathway
length(unique(tr_wnt_sp$ID))
length(unique(tr_wnt_sp$ID))/644
TR_location(
rbind(tr_fav_sp, tr_unfav_sp),
byTRtype = TRUE)
TR_location(tr_fav_sp, byTRtype = TRUE)
TR_location(tr_unfav_sp, byTRtype = TRUE)
# combine all TR from the three groups
tr_all <- rbind(tr_fav, tr_unfav, tr_wnt)
AAfreq_all <- AAfreq_in_TR(tr_all)
AAfreq_all[base::order(AAfreq_all$aa_ratio, decreasing = TRUE),]
AAfreq_all_homo <- AAfreq_in_TR(tr_all[which(tr_all$l_type == "homo"),])
AAfreq_all_homo[base::order(AAfreq_all_homo$aa_ratio, decreasing = TRUE),]
AAfreq_all[which(AAfreq_all$aa == "L"),]
AAfreq_all_homo[which(AAfreq_all_homo$aa == "L"),]
AAratio_vs_Disorderpropensity(tr_all, plot_title = "CRC & Wnt-Pathway Associated Proteins")
AAratio_vs_Disorderpropensity(sp_overall = TRUE)
# CRC favorable proteins in Wnt pathway
tr_fav_sp$protein_name[which(tr_fav_sp$ID %in% tr_wnt_sp$ID)]
# CRC unfavorable proteins in Wnt pathway
tr_unfav_sp$protein_name[which(tr_unfav_sp$ID %in% tr_wnt_sp$ID)]
# CRC favorable proteins
table(table(tr_fav$ID))
# CRC unfavorable proteins
table(table(tr_unfav_sp$ID))
# Wnt-pathway proteins
table(table(tr_wnt_sp$ID))
protein_id_by_number_of_TR(tr_unfav_sp, 11)
eleven_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 11)[[1]]),]
unique(eleven_TRs$protein_name)
unique(eleven_TRs$prot_function)
protein_id_by_number_of_TR(tr_unfav_sp, 5)
five_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 5)[[1]]),]
unique(five_TRs$protein_name)
unique(five_TRs$prot_function)
protein_id_by_number_of_TR(tr_unfav_sp, 5)
five_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 5)),]
protein_id_by_number_of_TR(tr_unfav_sp, 5)
five_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 5)[1]),]
unique(five_TRs$protein_name)
unique(five_TRs$prot_function)
protein_id_by_number_of_TR(tr_unfav_sp, 5)
five_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 5)[1]),]
unique(five_TRs$protein_name)
unique(five_TRs$prot_function)
five_TRs <- tr_unfav_sp[which(tr_unfav_sp$ID == protein_id_by_number_of_TR(tr_unfav_sp, 5)[2]),]
unique(five_TRs$protein_name)
unique(five_TRs$prot_function)
summary(tr_fav_sp$l_effective)
unique(tr_fav_sp$l_type)
summary(tr_unfav_sp$l_effective)
unique(tr_unfav_sp$l_type)
summary(tr_wnt_sp$l_effective)
unique(tr_wnt_sp$l_type)
summary(tr_fav_sp$n_effective)
summary(tr_unfav_sp$n_effective)
summary(tr_wnt_sp$n_effective)
summary(tr_fav_sp$total_repeat_length)
summary(tr_unfav_sp$total_repeat_length)
summary(tr_wnt_sp$total_repeat_length)
tr_wnt_sp[which(tr_wnt_sp$total_repeat_length == max(tr_wnt_sp$total_repeat_length)),]
tr_wnt_sp$protein_name[which(tr_wnt_sp$total_repeat_length > 15)]
unique(tr_wnt_sp$prot_function[which(tr_wnt_sp$total_repeat_length > 15)])
tr_fav_sp$protein_name[which(tr_fav_sp$total_repeat_length > 15)]
unique(tr_fav_sp$prot_function[which(tr_fav_sp$total_repeat_length > 15)])
tr_unfav_sp$protein_name[which(tr_unfav_sp$total_repeat_length > 15)]
unique(tr_unfav_sp$prot_function[which(tr_unfav_sp$total_repeat_length > 15)])
# Show only a selection of variables
sel_var <- c("ID", "begin", "msa_original", "repeat_region_length", "l_type", "prot_name", "protein_name", "gene_names", "prot_function")
tr_wnt_sp[which(tr_wnt_sp$ID == "Q9UJU2"),sel_var]
tr_wnt_sp[which(tr_wnt_sp$ID == "Q9HCS4"),sel_var]
tr_wnt_sp[which(tr_wnt_sp$ID == "P36402"),sel_var]
tr_wnt_sp[grepl("APC", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("GSK", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("KC", tr_wnt_sp$prot_name),sel_var]
tr_fav_sp[grepl("KC", tr_fav_sp$prot_name),sel_var]
tr_unfav_sp[grepl("KC", tr_unfav_sp$prot_name),sel_var]
tr_unfav_sp[grepl("KC", tr_unfav_sp$prot_name),]
tr_wnt_sp[grepl("KC", tr_wnt_sp$prot_name),sel_var]
tr_fav_sp[grepl("KC", tr_fav_sp$prot_name),sel_var]
tr_unfav_sp[grepl("KC", tr_unfav_sp$prot_name),sel_var]
tr_wnt_sp[grepl("AXIN", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("DVL", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("FOX", tr_wnt_sp$prot_name),sel_var]
tr_fav_sp[grepl("FOX", tr_fav_sp$prot_name),sel_var]
tr_unfav_sp[grepl("FOX", tr_unfav_sp$prot_name),sel_var]
tr_wnt_sp[which(tr_wnt_sp$ID == "O00358"),sel_var]
tr_unfav_sp[which(tr_unfav_sp$ID == "P10070"),sel_var]
tr_wnt_sp[grepl("FZ", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("WNT", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("PTK", tr_wnt_sp$prot_name),sel_var]
tr_wnt_sp[grepl("ROR", tr_wnt_sp$prot_name),sel_var]
# url to UniProt/Swiss-Prot querying enzyme commissions for protein kinases
url_kin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.10.-%20OR%20ec:2.7.11.-%20OR%20ec:2.7.12.-%20OR%20ec:2.7.13.-%20OR%20ec:2.7.14.-%20OR%20ec:2.7.99.-&format=fasta&sort=score&fil=proteome:UP000005640%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22"
sp_kinIDs <- load_kinome(url = url_kin, path = dest_file_kin, OnlyIDs = TRUE)
# No. of protein kinases in Human Proteome
length(sp_kinIDs)
length(sp_kinIDs) / nrow(sp_all_fav)
# No. protein kinases in Wnt-Pathway
sum(sp_kinIDs %in% tr_wnt$ID)
sum(sp_kinIDs %in% tr_wnt$ID) / nrow(tr_wnt)
# No. protein kinases in CRC favorable proteins
sum(sp_kinIDs %in% tr_fav$ID)
# No. protein kinases in CRC unfavorable proteins
sum(sp_kinIDs %in% tr_unfav$ID)
(sum(sp_kinIDs %in% tr_fav$ID) + sum(sp_kinIDs %in% tr_unfav$ID))/(nrow(tr_fav)+nrow(tr_unfav))
dest_file_kinext <- "/home/matteo/polybox/MSc_ACLS/master_thesis/TRALResultAnalysis/data/swissprot_human_extkinome.tsv"
url_extkin <- "https://www.uniprot.org/uniprot/?query=ec:2.7.-.-%20AND%20reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22%20AND%20proteome:up000005640&format=fasta&sort=score"
sp_extkinIDS <- load_kinome(url = url_extkin, path = dest_file_kinext, OnlyIDs = TRUE)
# No. of protein kinases in Human Proteome
length(sp_extkinIDS)
length(sp_extkinIDS) / nrow(sp_all_fav)
# No. protein kinases in Wnt-Pathway
sum(sp_extkinIDS %in% tr_wnt$ID)
sum(sp_extkinIDS %in% tr_wnt$ID) / nrow(tr_wnt)
# No. protein kinases in CRC favorable proteins
sum(sp_extkinIDS %in% tr_fav$ID)
# No. protein kinases in CRC unfavorable proteins
sum(sp_extkinIDS %in% tr_unfav$ID)
(sum(sp_extkinIDS %in% tr_fav$ID) + sum(sp_extkinIDS %in% tr_unfav$ID))/(nrow(tr_fav)+nrow(tr_unfav))
library(TRALResultAnalysis)
library(TRALResultAnalysis)
